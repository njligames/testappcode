add_library(SDL_test UNKNOWN IMPORTED)
set_property(TARGET SDL_test APPEND PROPERTY IMPORTED_LOCATION  "${THIRDPARTY_INCLUDE_DIR}/platform/${TARGET_PLATFORM}/libSDL_test.a")
list(APPEND TARGET_LIBRARIES SDL_test)

list(APPEND GAME_INCLUDE_DIRS ${GTEST_INCLUDE_DIRS})
list(APPEND GAME_INCLUDE_DIRS ${GMOCK_INCLUDE_DIRS})
list(APPEND GAME_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR})

file(GLOB_RECURSE SRCS ${CMAKE_CURRENT_SOURCE_DIR}/*.c*)
file(GLOB_RECURSE HDRS ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

list(APPEND GAME_SOURCES_TEST ${SRCS} ${HDRS})



SET(CMAKE_OSX_SYSROOT "iphoneos")
SET(CMAKE_XCODE_EFFECTIVE_PLATFORMS "-iphoneos;-iphonesimulator")

set(CMAKE_XCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET "10.0" CACHE STRING "Minimum supported iOS version")

# https://svn.scolring.org/trunk/dependencies/CMake/toolchain/IOS.toolchain.cmake
set(IOS_IPHONEOS_ARCHS "arm64 armv7" CACHE STRING "Target iPhone architectures")
set(IOS_IPHONESIMULATOR_ARCHS "i386 x86_64" CACHE STRING "Target iPhone simulator architectures")
# Set iPhoneOS architectures
set(CMAKE_XCODE_ATTRIBUTE_ARCHS[sdk=iphoneos*] "${IOS_IPHONEOS_ARCHS}")
set(CMAKE_XCODE_ATTRIBUTE_VALID_ARCHS[sdk=iphoneos*] "${IOS_IPHONEOS_ARCHS}")

# Set iPhoneSimulator architectures
set(CMAKE_XCODE_ATTRIBUTE_ARCHS[sdk=iphonesimulator*] "${IOS_IPHONESIMULATOR_ARCHS}")
set(CMAKE_XCODE_ATTRIBUTE_VALID_ARCHS[sdk=iphonesimulator*] "${IOS_IPHONESIMULATOR_ARCHS}")




add_executable( ${PROJECT_NAME}-test-static ${GAME_SOURCES_TEST} ${TARGET_RESOURCES})
set_property(DIRECTORY ${CMAKE_SOURCE_DIR} PROPERTY XCODE_STARTUP_PROJECT ${PROJECT_NAME}-test-static)

# configure_file("${CMAKEIN_REPO_DIRECTORY}/platform.in/macOS/Info.plist.in" "${CMAKE_BINARY_DIR}/Info.plist")

# set_target_properties(
#   ${PROJECT_NAME}-test-static PROPERTIES
#   MACOSX_BUNDLE TRUE
#   XCODE_ATTRIBUTE_INSTALL_PATH "${CMAKE_BINARY_DIR}/ProductRelease"
#   XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME "LaunchImage"
#   XCODE_ATTRIBUTE_PRODUCT_NAME "${PROJECT_NAME}-test-static"
#   XCODE_ATTRIBUTE_DEVELOPMENT_TEAM $ENV{XCODE_DEVELOPMENT_TEAM}
#   POSITION_INDEPENDENT_CODE ON
#   XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
#   # MACOSX_BUNDLE_INFO_PLIST "${CMAKE_BINARY_DIR}/Info.plist"
#   XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME "AppIcon"
#   XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER njligames.${TARGET_PLATFORM}.${PROJECT_NAME}-test-static
#   XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
#   XCODE_ATTRIBUTE_ENABLE_BITCODE NO
#   XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer"
#   INCLUDE_DIRECTORIES "${GAME_INCLUDE_DIRS}"
#   XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "1,2"
#   )
set_target_properties(
    ${PROJECT_NAME}-test-static PROPERTIES

    MACOSX_BUNDLE TRUE
    # RESOURCE "${TARGET_RESOURCES}"

    XCODE_ATTRIBUTE_DEVELOPMENT_TEAM "${XCODE_DEVELOPMENT_TEAM}"
    # OUTPUT_NAME "${TARGET_EXECUTABLE_NAME}"
    POSITION_INDEPENDENT_CODE ON
    XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "1,2"
    XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
    MACOSX_BUNDLE_INFO_PLIST "${CMAKE_BINARY_DIR}/Info.plist"
    XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_APPICON_NAME "AppIcon"
    XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER njligames.${TARGET_PLATFORM}.${PROJECT_NAME}-test-static
    XCODE_ATTRIBUTE_SDKROOT "iOS"
    XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    XCODE_ATTRIBUTE_ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME "LaunchImage"
    # XCODE_ATTRIBUTE_PRODUCT_NAME ${TARGET_EXECUTABLE_NAME}
    XCODE_ATTRIBUTE_ENABLE_BITCODE NO
    XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer"
    INCLUDE_DIRECTORIES "${GAME_INCLUDE_DIRS}"
    )

target_compile_definitions( ${PROJECT_NAME}-test-static PUBLIC ${TARGET_DEFINITIONS})
target_link_libraries( ${PROJECT_NAME}-test-static ${PROJECT_NAME} gtest gmock_main ${TARGET_LIBRARIES})

add_test(NAME ${PROJECT_NAME}-test-static COMMAND ${PROJECT_NAME}-test-static)

set(CLANG_FORMAT_BIN "/usr/local/bin/clang-format" CACHE STRING "use: `brew install clang-format` to install")
add_custom_target(
    ${PROJECT_NAME}-clang-format-test
    COMMAND ${CLANG_FORMAT_BIN} -style=file -i ${GAME_SOURCES_TEST} -verbose
    SOURCES
    "${CMAKE_SOURCE_DIR}/.clang-format"
    )
