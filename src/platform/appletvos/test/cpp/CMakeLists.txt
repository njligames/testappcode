
# This little macro lets you set any XCode specific property
macro (set_xcode_property TARGET XCODE_PROPERTY XCODE_VALUE)
    set_property (TARGET ${TARGET} PROPERTY XCODE_ATTRIBUTE_${XCODE_PROPERTY} ${XCODE_VALUE})
endmacro (set_xcode_property)

add_library(SDL_test UNKNOWN IMPORTED)
set_property(TARGET SDL_test APPEND PROPERTY IMPORTED_LOCATION  "${THIRDPARTY_INCLUDE_DIR}/platform/${TARGET_PLATFORM}/Release\$(EFFECTIVE_PLATFORM_NAME)/libSDL2test.a")
list(APPEND GAME_LIBRARIES SDL_test)

list(APPEND GAME_LIBRARIES "-framework AudioToolbox")

list(APPEND GAME_INCLUDE_DIRS ${GTEST_INCLUDE_DIRS})
list(APPEND GAME_INCLUDE_DIRS ${GMOCK_INCLUDE_DIRS})
list(APPEND GAME_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR})

file(GLOB_RECURSE SRCS ${CMAKE_CURRENT_SOURCE_DIR}/*.c*)
file(GLOB_RECURSE HDRS ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

list(APPEND GAME_SOURCES_TEST ${SRCS} ${HDRS})

add_executable( ${PROJECT_NAME}-test-static ${GAME_SOURCES_TEST} ${TARGET_RESOURCES})
set_property(DIRECTORY ${CMAKE_SOURCE_DIR} PROPERTY XCODE_STARTUP_PROJECT ${PROJECT_NAME}-test-static)

set_target_properties(
    ${PROJECT_NAME}-test-static PROPERTIES

    MACOSX_BUNDLE TRUE

    POSITION_INDEPENDENT_CODE ON
    XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY "3"
    XCODE_ATTRIBUTE_COMBINE_HIDPI_IMAGES "NO"
    XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER njligames.${TARGET_PLATFORM}.${PROJECT_NAME}-test-static
    XCODE_ATTRIBUTE_SDKROOT "appletvos"
    XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    XCODE_ATTRIBUTE_ENABLE_BITCODE NO
    INCLUDE_DIRECTORIES "${GAME_INCLUDE_DIRS}"
    XCODE_ATTRIBUTE_PRODUCT_BUNDLE_IDENTIFIER njligames.${TARGET_PLATFORM}.${PROJECT_NAME}-test-static
    XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer"
    XCODE_ATTRIBUTE_DEVELOPMENT_TEAM "SRBQ5SCF5X"
    )

# configure_file("${CMAKEIN_REPO_DIRECTORY}/platform.in/macOS/Info.plist.in" "${CMAKE_BINARY_DIR}/Info.plist")
  # MACOSX_BUNDLE_INFO_PLIST "${CMAKE_BINARY_DIR}/Info.plist"

list(APPEND INSTALL_LIBS ${PROJECT_NAME}-test-static)

target_compile_definitions( ${PROJECT_NAME}-test-static PUBLIC ${TARGET_DEFINITIONS})
target_link_libraries( ${PROJECT_NAME}-test-static ${PROJECT_NAME} gtest gmock_main ${GAME_LIBRARIES})

set_property(TARGET ${PROJECT_NAME}-test-static PROPERTY PUBLIC_HEADER ${GAME_PUBLIC_HEADER})
set_property(TARGET ${PROJECT_NAME}-test-static PROPERTY INCLUDE_DIRECTORIES ${GAME_INCLUDE_DIRS})
set_property(TARGET ${PROJECT_NAME}-test-static PROPERTY OUTPUT_NAME "${PROJECT_NAME}")
set_property(TARGET ${PROJECT_NAME}-test-static PROPERTY XCODE_ATTRIBUTE_PRODUCT_NAME "${PROJECT_NAME}")

add_test(NAME ${PROJECT_NAME}-test-static COMMAND ${PROJECT_NAME}-test-static)

set(CLANG_FORMAT_BIN "/usr/local/bin/clang-format" CACHE STRING "use: `brew install clang-format` to install")
add_custom_target(
    ${PROJECT_NAME}-clang-format-test
    COMMAND ${CLANG_FORMAT_BIN} -style=file -i ${GAME_SOURCES_TEST} -verbose
    SOURCES
    "${CMAKE_SOURCE_DIR}/.clang-format"
    )
