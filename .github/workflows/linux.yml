# This is a basic workflow to help you get started with Actions

name: linux-swig-lua

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: install swig
      run: sudo apt-get install swig

    - name: install opengl
      run: sudo apt-get install libglu1-mesa-dev freeglut3-dev mesa-common-dev

    - name: doxygen
      run: sudo apt-get install doxygen

    - name: graphviz
      run: sudo apt-get install graphviz

    - name: install xmllint
      run: sudo apt-get install libxml2-utils

    - name: sndio
      run: sudo apt-get install -y sndio-tools
      
    - name: build linux
      run: |
        cmake --version
        cmake . -Dgame_DOC:BOOL=ON  -Dgame_TEST:BOOL=ON -DCMAKE_INSTALL_PREFIX=install -G "Unix Makefiles"

        cmake --build . --config ${CONFIGURATION} --target install
        cmake --build . --config Release --target package

        ./.build_linux/src/platform/linux/test/cpp/game-test-static --gtest_output="xml" || true
        test=$(echo 'cat //failure/@message' | xmllint --shell "test_detail.xml" | grep -v ">") || true

        if [ -z "$test" ]
        then
            echo "PASSED!"
            exit 0
        else
            echo "FAILED!"
            echo $test
            exit 1
        fi
        
    - uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: game*
